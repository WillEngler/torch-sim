name: Test graphpes variance

on:
  workflow_dispatch: {}
  pull_request:
    paths:
      - "tests/models/test_graphpes.py"
      - ".github/workflows/test-graphpes-variance.yml"

permissions:
  contents: read

jobs:
  test-graphpes-variance:
    name: test (macos-14, py312, ${{ matrix.mode }})
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        mode: [default, single_thread]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies (test + graphpes)
        run: |
          uv pip install -e .[test,graphpes] --resolution=highest --system

      - name: Run flaky test (default)
        if: matrix.mode == 'default'
        run: |
          python - <<'PY'
          import platform, sys, torch
          print('python', sys.version)
          print('platform', platform.platform())
          print('torch', torch.__version__)
          print('threads', torch.get_num_threads())
          PY
          pytest -q --maxfail=1 tests/models/test_graphpes.py::test_graphpes_nequip_consistency

      - name: Run flaky test (single-threaded math)
        if: matrix.mode == 'single_thread'
        env:
          OMP_NUM_THREADS: '1'
          OPENBLAS_NUM_THREADS: '1'
          VECLIB_MAXIMUM_THREADS: '1'
          MKL_NUM_THREADS: '1'
          NUMEXPR_NUM_THREADS: '1'
          PYTHONHASHSEED: '0'
        run: |
          python - <<'PY'
          import os, platform, sys, torch
          print('python', sys.version)
          print('platform', platform.platform())
          print('torch', torch.__version__)
          print('env_threads', {k: os.environ.get(k) for k in ['OMP_NUM_THREADS','OPENBLAS_NUM_THREADS','VECLIB_MAXIMUM_THREADS','MKL_NUM_THREADS','NUMEXPR_NUM_THREADS']})
          print('torch_threads_before', torch.get_num_threads())
          PY
          pytest -q --maxfail=1 tests/models/test_graphpes.py::test_graphpes_nequip_consistency


